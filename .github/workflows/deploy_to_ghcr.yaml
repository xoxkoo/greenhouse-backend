name: deploy_to_ghcr

on:
  workflow_call:
jobs:
  Deploy:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1 
        
      - name: Log in to GHCR
        env:
          REGISTRY: ghcr.io 
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }} 
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}  
          
      - name: Build Docker Image
        run: |
          docker-compose -f docker-compose.yaml build
          docker-compose -f docker-compose.yaml push

      - name: Extract metadata (tags, labels) for Docker GHCR
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} #create ghcr image format within as id called meta
      - name: Build and push Docker image for web
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc #push docker image to ghcr
        with:
          context: .
          dockerfile: DockerfileWeb
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image for socket
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc #push docker image to ghcr
        with:
          context: .
          dockerfile: DockerfileSocket
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image for timer
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc #push docker image to ghcr
        with:
          context: .
          dockerfile: DockerfileTimer
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}      